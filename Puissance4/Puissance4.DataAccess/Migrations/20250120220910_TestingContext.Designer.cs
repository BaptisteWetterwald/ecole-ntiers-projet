// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Puissance4.DataAccess;

#nullable disable

namespace Puissance4.DataAccess.Migrations
{
    [DbContext(typeof(Puissance4DbContext))]
    [Migration("20250120220910_TestingContext")]
    partial class TestingContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("Puissance4.DataAccess.Entities.CellEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Column")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GridId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Row")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TokenId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("Puissance4.DataAccess.Entities.TokenEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CellId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CellId")
                        .IsUnique();

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("Puissance4.DataAccess.Entities.TokenEntity", b =>
                {
                    b.HasOne("Puissance4.DataAccess.Entities.CellEntity", "Cell")
                        .WithOne("Token")
                        .HasForeignKey("Puissance4.DataAccess.Entities.TokenEntity", "CellId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cell");
                });

            modelBuilder.Entity("Puissance4.DataAccess.Entities.CellEntity", b =>
                {
                    b.Navigation("Token");
                });
#pragma warning restore 612, 618
        }
    }
}
