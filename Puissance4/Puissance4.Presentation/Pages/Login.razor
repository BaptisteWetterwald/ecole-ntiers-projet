@page "/login"
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<h3>Login</h3>

@if (LoginFailed)
{
    <p style="color: red;">Invalid username or password. Please try again.</p>
}

<div class="login-container">
    <form class="login-form">
        <!-- Username -->
        <div class="form-group">
            <label for="username">Username</label>
            <input id="username" type="text" class="form-control" @bind="Username" placeholder="Enter your username"
                   required/>
        </div>

        <!-- Password -->
        <div class="form-group">
            <label for="password">Password</label>
            <input id="password" type="password" class="form-control" @bind="Password" placeholder="Enter your password"
                   required/>
        </div>

        <!-- Login Button -->
        <button type="button" class="btn btn-primary btn-login" @onclick="HandleLogin">Login</button>
    </form>

    <!-- Optional: Link for signup or forgot password -->
    <p class="signup-link">
        Don't have an account? <a href="/signup">Sign up</a>
    </p>

</div>

@code {

    private string Username { get; set; }
    private string Password { get; set; }
    private bool LoginFailed { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (await AuthService.IsAuthenticated())
        {
            NavigationManager.NavigateTo("/games");
        }
    }

    private async Task HandleLogin()
    {
        LoginFailed = false;

        var success = await AuthService.Login(Username, Password);
        if (success)
        {
            NavigationManager.NavigateTo("/games");
        }
        else
        {
            LoginFailed = true;
        }
    }

}