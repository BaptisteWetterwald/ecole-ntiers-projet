@page "/puissance4"

<PageTitle>Blaze 4</PageTitle>

<div class="container">
        <main class="content">
        <div class="theme-toggle">
            <button class="btn-theme" @onclick="ToggleTheme">Switch to @(isDarkTheme ? "Light" : "Dark") Theme</button>
        </div>

        <h1 class="title">Blaze 4</h1>

        <div class="game-board">
            @for (int row = 0; row < 6; row++)
            {
                <div class="row">
                    @for (int col = 0; col < 7; col++)
                    {
                        <div class="cell" @onclick="() => PlaceToken(col)" style="background-color: @(GetCellContent(row, col) == "Red" ? "red" : GetCellContent(row, col) == "Yellow" ? "yellow" : isDarkTheme ? "#f0f0f0" : "#1e1e1e");">
                        </div>
                    }
                </div>
            }
        </div>

        <p class="current-player">Current Player: <span>@currentPlayer</span></p>

        <button class="btn-reset" @onclick="ResetGame">Reset Game</button>
    </main>
</div>

<style>
    body {
        margin: 0;
        padding: 0;
        display: grid;
        font-family: Arial, sans-serif;
    }

    .container {
        display: flex;
        width: auto;
        height: 100%;
    }

    .content {
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        background-color: @(isDarkTheme ? "#6610f2" : "#ffffff");;
        color: @(isDarkTheme ? "white" : "black");
        padding: 20px;
        overflow: auto;
    }

    .theme-toggle {
        align-self: flex-end;
        margin-bottom: 20px;
    }

    .btn-theme {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1rem;
        transition: background-color 0.3s;
    }

    .btn-theme:hover {
        background-color: #0056b3;
    }

    .title {
        font-size: 2.5rem;
        margin: 20px 0;
        color: @(isDarkTheme ? "#61dafb" : "#282c34");
    }

    .game-board {
        display: flex;
        flex-direction: column;
        align-items: center;
        background-color: @(isDarkTheme ? "#1e1e1e" : "#e0e0e0");
        padding: 10px;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
    }

    .row {
        display: flex;
    }

    .cell {
        width: 75px;
        height: 75px;
        margin: 5px;
        border-radius: 50%;
        border: 2px solid @(isDarkTheme ? "#444" : "#888");
        background-color: #f0f0f0;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.2s;
    }

    .cell:hover {
        transform: scale(1.1);
        background-color: @(isDarkTheme ? "#ddd" : "#bbb");
    }

    .btn-reset {
        margin-top: 20px;
        padding: 10px 20px;
        background-color: #d9534f;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1rem;
        transition: background-color 0.3s;
    }

    .btn-reset:hover {
        background-color: #c9302c;
    }

    .current-player {
        margin: 15px 0;
        font-size: 1.2rem;
    }

    .current-player span {
        font-weight: bold;
        color: @(isDarkTheme ? "#61dafb" : "#282c34");
    }
    
    
</style>

@code {
    private string[,] board = new string[6, 7];
    private string currentPlayer = "Red";
    private bool isDarkTheme = true;

    private void PlaceToken(int col)
    {
        for (int row = 5; row >= 0; row--)
        {
            if (string.IsNullOrEmpty(board[row, col]))
            {
                board[row, col] = currentPlayer;
                SwitchPlayer();
                break;
            }
        }
    }

    private void SwitchPlayer()
    {
        currentPlayer = currentPlayer == "Red" ? "Yellow" : "Red";
    }

    private string GetCellContent(int row, int col)
    {
        return board[row, col] ?? string.Empty;
    }

    private void ResetGame()
    {
        board = new string[6, 7];
        currentPlayer = "Red";
    }

    private void ToggleTheme()
    {
        isDarkTheme = !isDarkTheme;
    }
}
